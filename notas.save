SECCION 55 - ADDING MAPS

546. Geocoding Our Locations
Vamos a trabajar en el proceso de geolocalizacion. Cuando se envia un form pa crear un nuevo recurso. Cuando especifico ubicacion, vamos a tomar ese texto. Vamos a obtener eso e intentar sacar latitud y longitud.
Lo vamos a hacer a traves de la API de geolocalizacion de Mapbox. Hay muchas api que te ayudan con geolocalizacion. 

dosc>geocoding...
se puede poner un string y te devuelve coordenadas y tambien alreves.
Podemos hacer nuestro propio rquest manualmente, ya que es un endpoint (una url), pero no vamos a hacer eso.
POQUE MAPBOX tiene un Node client, called mapbox-sdk.

npm i @mapbox/mapbox-sdk

En el repositorio de github, si vas a fulldocs hay una banda de cosas. Buscamos forward geocoding. Tenemos que hacer el client y despues llamamos a forwardGeocode(), que toma un query, por ejemplo 'Paris, France', despues especificamos cuantos resultados queremos recuperar, despues .send() 
esto lo podemos hacer await y despues nos da la respuesta.

En el controler de soccerfields: 

const mbxGeocoding = require("@mapbox/mapbox-sdk/services/geocoding");

hay muchos servicios y podes requerir el que necesites.
Despues necesitamos pasar el token.

const mapBoxToken = process.env.MAPBOX_TOKEN;
const geocoder = mbxGeocoding({ accessToken: mapBoxToken })

Este geocoder va a tener los dos metodos que queremos: forward and reverse geocode.
En realidad necesitamos mas el forward.

En createSoccerfield: arriba de todo
const geoData = await geocoder.forwardGeocode({
	query: 'Yosemite, CA',
	limit: 1
}.send()
console.log(geoData);
res.send('OK!!)

*El chabon comenta el resto del endpoint.
Imprime en consola un objeto re grande. Despues dice que lo que vamos a necesitar es:

geoData.body.features

Nos da un array con un elemento porque pusimos el limite de 1, podrian ser mas.
De todas las propiedades que tiene queremos geometry:, ya que tiene las coordenadas.

geoData.body.features[0].geometry.coordinates

Nos da unas cordenadas, si lo pegamos en google nos da error. Nos da la latitud primero y la longitud despues.
En el query de nuestra funcion tenemos que cambiar el valor que pusimos por:

req.body.soccerfield.location,

El chabon crea un soccerfield, le pone una ubicacion y se fija si funciona poniendo las coordenadas que te devuelve en google (las invierte antes porque la funcion te los da alreves)

**************************************************
**************************************************

547. Working With GeoJSON

Lo que tenemos que hacer ahora es almacenar esta info p obterner la latitud y longitud.
el punto de coordenadas de Mapbox y almacenarlo en nustro soccerfield model.
Si imprimimos hasta geometry nos da un geoJSON.
El formato es un type field que siempre va a tener "Point" (esto viene asi de Mapbox, pero geoJSON es mucho mas grande que mapbox, asi como JSON es mas grande que una Api).
El segundo campo es coordinates. Vamos a almacenar el geoJSON completo.

La forma en que lo vamos a meter en el soccerfield model es algo asi como:

geometry: {
	"type":"Point", "coordinates":[-1923498,1234565]}

type va a ser un string y tiene que ser "Point" y coordinates es un array de 2 numbers.
Esto aparece asi en los docs de mongoose. Mongo soporta mucha de las funcionalidades de geoJSON.

el loco copia de los docs de mongoose y cambia 'location' por 'geometry'.
En point podrian entrar mas opciones, que serian las que coincidan con la string, pero solo vanos a pedir uno.
en createCampground:
vamos a guardar geoData.body.features[0].geometry en nuestro soccerfield.
abajo de new Soccerfield:

soccerfield.geometry = geoData.body.features[0].geometry
 
casi al final del endpoint pone un console.log con el soccerfield pa ver que onda.

*************************************
*************************************

548. Displaying a Map

Vamos a mostrar un map en la show page, que tendra un pin que seniale la ubicacion del soccerfield.
Para mpezar empecemos con que cualquier mapa se muestre en cualquier lado.
La parte de mapbox que usaremos se denomina Mapbox GL JS. Que es la herramienta que usamos para render interactive maps.
Hay que copiar los links. Los de arriba en el boilerplate, en el head. 
En show page: arriba del carrusel pone solo la primera linea del div (de los links de abajo)
Lo siguiente que tenemos que hacer es decirle a mapbox "pone ese mapa en ese div" y le vamos a dar algunas opciones,
como pueden ser container, style, center, zoom. El loco copia todo y lo pega en un script al final de show.ejs.
Poner el access token '<%-process.env.MAPBOX_TOKEN%>'

Cuando actualiza la pagina tiene el map ahi.

public>javascripts>showPageMap.js
el loco corta el script de la show page y lo pega ahi sin los tags.
En la show page, al final: 

<script src="/javascripts/showPageMap.js"></script>

y arriba de todo va a hacer un script para poder acceder al token, ya que al mover el script a un js ya no podemos usar un ejs sintax

<script>
	const mapToken = '<%-process.env.MAPBOX_TOKEN%>';
</script>

En showPageMap.js: en lugar del ejs pone mapToken;
En show page corta el script de arriba y lo pega abajo (arriba del otro)

*****************************************
****************************************

549. Centering The Map On A Soccerfield

Como podemos agregar un marker al map. 
En Mapbox GL docs, examples: util. Hay codigo donde te indica como crear un new mapboxgl.Marker()
Despues le pasas una latitud y longitud tal como te lo da el geoJSON, ya que esta pensado para poner primero el eje x.
Y despues addTo(map)

En showPageMap.js: abajo:

new mapboxgl.Marker()
	.setLngLat([la ubicacion que tiene arriba en center])
	.addTo(map)

En los docs te dice como cambiar el stylo del marker si queres.
Ahora vamos a querer centrar este mapa en la ubicacion real y ponerle un marcador.
Va a ser un proceso parecido al que tuvimos con el map token, hay que crear una variable js, para tener acceso en showPageMap.js
abajo de la const del mapToken:

const soccerfield = <%- JSON.stringify(soccerfield) %>

Ahora en showPageMap.js tenemos acceso al soccerfield. Entonces:

center: soccerfield.geometry.coordinates,

lo mismo en .setLngLat()

Deberia aparecer el mapa en el lugar correspondiente y con un marcador.
El loco crea un nuevo soccerfield pa ver que onda. We are no handling errors.

***********************************
***********************************

550. Fixing Our Seeds Bug






